{"events":[],"handlers":[{"code":"template = [[\n-- DU-Locura-Storage-Info screen output\njson = require('dkjson')\nrx,ry = getResolution()\nx,borderSpacing=10,4\nfrom_side = rx*0.05\n\nbackground = createLayer()\nback = createLayer()\nfront = createLayer()\n\nheading=loadFont('Montserrat-Bold',75)\nsmall=loadFont('Play',14)\nsmallBold=loadFont('Play-Bold',18)\nsubtext=loadFont('Play', 8)\nlarge=loadFont('Play', 60)\nkindalarge=loadFont('Play', 100)\nkindasmall=loadFont('Play', 40)\n\ncatName = string.upper('${Material}')\nBGColor = '${BG_Color}'\nKLVolume = '${volume}'\nLVolume = '${currentVolume}'\npercent = '${percent}'\niconImage = loadImage('${itemIcn}')\ncounting = '${COUNT}'\ntotalValue = ${COUNT}*'${value}'\nmaxitems = '${MAX}'\n\nJericoBar=]]..tostring(showJericoBar)..[[\n\nKorKL=]]..tostring(showinKL)..[[\n\nUseWall=]]..tostring(UseWallpaper)..[[\n\nshowValue=]]..tostring(showValue)..[[\n\nHideGitHub=]]..tostring(HideGitHub)..[[\n\nHideTier=]]..tostring(HideTier)..[[\n\nshowCount=]]..tostring(showCount)..[[\n\nshowTotal=]]..tostring(showTotal)..[[\n\nshowBTotal=]]..tostring(showBTotal)..[[\n\nWallPaperIMG = loadImage(']]..WallPaper..[[')\n\nif UseWall then addImage(background,WallPaperIMG,0,0,rx,ry) \n else setBackgroundColor( ${BGColor} ) end\n\nfunction drawDoubleLine(layer,x,y,rx,space)\n addLine(layer,x,y,rx-x,y)\n addLine(layer,x,y+space,rx-x,y+space) \nend\n\nsetDefaultStrokeColor(back,Shape_Line,0,0,0,0.5)\nsetDefaultShadow(back,Shape_Line,6,0,0,0,0.5)\nsetDefaultFillColor(front,Shape_BoxRounded,249/255,212/255,123/255,1)\nsetDefaultFillColor(front,Shape_Text,0,0,0,1)\nsetDefaultFillColor(front,Shape_Box,0.075,0.125,0.156,1)\nsetDefaultFillColor(front,Shape_Text,0.710,0.878,0.941,1)\n\nfunction renderHeader(title)\n local h_factor=12\n local h=35\n addLine(back,0,h+12,rx,h+12)\n addBox(front,0,12,rx,h)\n addText(front,smallBold,title,44,35)\n addText(front,small,'Locura Storage Info v]] .. version .. [[',rx-170,35)\nend\n\nif JericoBar == true then \n if HideTier == false then \n renderHeader(string.upper('T${itemTier} ${itemName}'))\nelse\n renderHeader(string.upper('${itemName}'))\n end \nend\n\nif showValue == true then\n addImage(back,iconImage,120,80,250,250) \n setNextTextAlign(back,AlignH_Right,AlignV_Baseline)\n addText(back,heading,totalValue,870,230)\n setNextFillColor(back,51/255,60/255,74/255,1)\n addText(back,kindasmall,'รยง',870,230)\n setNextFillColor(back,51/255,60/255,74/255,1)\n addText(back,kindasmall,'EST VALUE',660,170)\nelseif showCount == true then\n addImage(back,iconImage,120,80,250,250) \n setNextTextAlign(back,AlignH_Right,AlignV_Baseline)\n addText(back,heading,counting,870,230)\n setNextFillColor(back,51/255,60/255,74/255,1)\n addText(back,kindasmall,'ITEMS LEFT',660,170)\n setNextFillColor(back,51/255,60/255,74/255,1)\n setNextTextAlign(back,AlignH_Right,AlignV_Baseline)\n addText(back,small,'- of ' ..maxitems,870,245)\nelse\n addImage(back,iconImage,370,80,250,250)\nend\n\naddText(front,heading,catName,50,570)\nsetDefaultStrokeColor(back,Shape_Line,1,1,1,0.5) \nsetDefaultStrokeWidth(back,Shape_Line,0.001) \nsetNextFillColor(front,1,1,1,0.5)\n\nif HideGitHub == true then \n drawDoubleLine(back,x,380,rx,borderSpacing)\nelse\n drawDoubleLine(back,x,380,950,borderSpacing)\n addText(front,subtext,'GITHUB/LOCURADU',945,385)\nend\n\nsetNextFillColor(front,${color},1)\nsetNextTextAlign(front,AlignH_Right,AlignV_Baseline)\n\nif showBTotal == true then\nif KorKL == true then \n if showTotal == true then \n addText(front,large,KLVolume..\"/\"..math.floor(${maxVolume}/1000),935,570)\n else \n addText(front,large,KLVolume,935,570)\n end \nelse\n if showTotal == true then\n addText(front,large,LVolume..\"/${maxVolume}\",960,570)\n else\n addText(front,large,LVolume,960,570)\n end\nend\n\nsetNextFillColor(front,51/255,60/255,74/255,1)\n\nif KorKL == true then \n addText(front,kindasmall,'KL',930,570)\nelse\n addText(front,kindasmall,'L',955,570)\nend\nend\n\nsetDefaultFillColor(back,Shape_Box,0.075,0.125,0.156,1)\nsetDefaultFillColor(front,Shape_Box,${color},1)\nfunction renderProgressBar(percent) \n local w=(rx-2-from_side*2)*('${percent}')/100\n local x=from_side\n local y=400\n local h=75\n addBox(back,x,y,rx-from_side*2,h)\n addBox(front,x+1,y+1,w,h-2)\nend\nrenderProgressBar()\n]]","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"4"},{"code":"-- Set option to use the default implementation pairing screens to containers, or use the one container to multi-screen option\nUseXScreens1Container = false --export: 1-5 screens linked to 1 container\n\n-- Set options for storage and screens\nMaterial = \"SCREEN1\" --export: Screen #1 <hr> Select the main title for screen #1\nitemID = 2125213321 --export: Screen #1 <hr> The item ID for screen #1 <br>ID found at du-lua.dev/#/items\nValue = '1' --export: Screen #1 <hr> Select the value you want for screen #1\nContSize = 1500 --export: Screen #1 <hr> The total container size for screen #1\nReverseRGB = true --export: Screen #1 <hr> Select the RGB bar direction for screen #1\nBG_Color = \"15/255,24/255,29/255\" --export: Screen #1 <hr> Select the background color for screen #1\nMaterial2 = \"SCREEN2\" --export: Screen #2 <hr> Select the main title for screen #2\nitemID2 = 2125213321 --export: Screen #2 <hr> The item ID for screen #2 <br>ID found at du-lua.dev/#/items\nValue2 = '1' --export: Screen #2 <hr> Select the value you want for screen #2\nContSize2 = 1500 --export: Screen #2 <hr> The total container size for screen #2\nReverseRGB2 = true --export: Screen #2 <hr> Select the RGB bar direction for screen #2\nBG_Color2 = \"15/255,24/255,29/255\" --export: Screen #2 <hr> Select the background color for screen #2\nMaterial3 = \"SCREEN3\" --export: Screen #3 <hr> Select the main title for screen #3\nitemID3 = 2125213321 --export: Screen #3 <hr> The item ID for screen #3 <br>ID found at du-lua.dev/#/items\nValue3 = '1' --export: Screen #3 <hr> Select the value you want for screen #3\nContSize3 = 1500 --export: Screen #3 <hr> The total container size for screen #3\nReverseRGB3 = true --export: Screen #3 <hr> Select the RGB bar direction for screen #3\nBG_Color3 = \"15/255,24/255,29/255\" --export: Screen #3 <hr> Select the background color for screen #3\nMaterial4 = \"SCREEN4\" --export: Screen #4 <hr> Select the main title for screen #4\nitemID4 = 2125213321 --export: Screen #4 <hr> The item ID for screen #4 <br>ID found at du-lua.dev/#/items\nValue4 = '1' --export: Screen #4 <hr> Select the value you want for screen #4\nContSize4 = 1500 --export: Screen #4 <hr> The total container size for screen #4\nReverseRGB4 = true --export: Screen #4 <hr> Select the RGB bar direction for screen #4\nBG_Color4 = \"15/255,24/255,29/255\" --export: Screen #4 <hr> Select the background color for screen #4\nMaterial5 = \"SCREEN5\" --export: Screen #5 <hr> Select the main title for screen #5\nitemID5 = 2125213321 --export: Screen #4 <hr> The item ID for screen #4 <br>ID found at du-lua.dev/#/items\nValue5 = '1' --export: Screen #5 <hr> Select the value you want for screen #5\nContSize5 = 1500 --export: Screen #5 <hr> The total container size for screen #5\nReverseRGB5 = true --export: Screen #4 <hr> Select the RGB bar direction for screen #4\nBG_Color5 = \"15/255,24/255,29/255\" --export: Screen #5 <hr> Select the background color for screen #5\n\n-- Basic options for screen looks\nUseWallpaper = false --export: Use or not use the wallpaper url below\nWallPaper = \"assets.prod.novaquark.com/130546/b6fc96cb-c570-4554-901f-099711f5383d.jpg\" --export: Wallpapper Image URL\nAutoContainer = true --export: Brabs all the container data itself.\nHideUnit = true --export: Hides the bottom right widget\nHideTier = false --export: Hides the items tier in the header\nHideGitHub = false --export: Hides GitHub link credit\nshowCount = true --export: Show how many items in container | Cant be used with showValue\nshowValue = false --export: Show the total value of your item/items based on values from above\nshowJericoBar = true --export: Shows the Header bar (JerichoBar)\nshowinKL = false --export: Show storage volume used in KL or L\nshowTotal = true --export: Show total next to used amount on screen\nshowBTotal = true --export: Show total on bottom right after title\n\n-- Backend stuff\nversion = '3.0'","filter":{"args":[],"signature":"onStart()","slotKey":"-4"},"key":"3"},{"code":"-- DU-Locura-Storage-Info\n-- GitHub/LocuraDU For Information / Updates / Downloads \n-- Script Credits: Discord/credence.locura & Discord/Arcto Lupus & Discord/LordDragonAlThor\n-- Other Credits: GitHub/Jericho1060 & GitHub/brendonh\n-- Built using the wonderful tools at https://du-lua.dev/\n-- Love With Your Heart, Use Your Head For Everything Else - Captain Disillusion\n\nsystem.print(\"----------------------------------------\")\nsystem.print(\"DU-Locura-Storage-Info version \" .. version)\nsystem.print(\"GitHub/LocuraDU\")\nsystem.print(\"----------------------------------------\")\n\n-- Functions\n\nfunction configure(a,b,c,d)\n if checkSlots(b,a) then\n config.screen = b\n config.container = a\n CONTVolume = math.floor(a.getMaxVolume())\n currentVolume = math.floor(a.getItemsVolume())\n cargoMass = math.floor(a.getItemsMass())\n b.activate()\n nameGroup = c\n return true\n end\n \n system.print(c..' No Container or Hub dectected')\n \n return false\nend\n\nfunction configureMulti(cont,scr,c,d)\n if not checkContainer(cont) then\n system.print(c..' No Container or Hub dectected')\n return false\n end\n \n if checkScreen(scr) then\n config.screen = scr\n config.container = cont\n CONTVolume = math.floor(cont.getMaxVolume())\n currentVolume = math.floor(cont.getItemsVolume())\n cargoMass = math.floor(cont.getItemsMass())\n scr.activate()\n nameGroup = c\n return true\n end\n \n \nend\n\nfunction checkContainer(cont)\n return (cont ~= nil and string.match(cont.getClass(), \"Container\"))\nend\n\nfunction checkScreen(scr)\n return (scr ~= nil and string.match(scr.getClass(), \"Screen\"))\nend\n \nfunction checkSlots(a, b)\n return (a ~= nil and b ~= nil and string.match(a.getClass(), \"Screen\") and string.match(b.getClass(), \"Container\"))\nend\n\nfunction interp(s, tab)\n return (s:gsub('($%b{})', function(w) return tab[w:sub(3, -2)] or w end))\nend\n\nfunction render(PAIRITEM,PAIRMAT,VAL,BGColor,RRGB,CONTS)\n if AutoContainer == true then\n maxVolume = CONTVolume \n else\n maxVolume = CONTS\n end\n \n local thingid = system.getItem(PAIRITEM)\n local currentVolume = currentVolume \n local volume = math.floor(currentVolume / 1000)\n local percent = currentVolume / maxVolume * 100\n local percentSmall = math.floor(percent) \n local COUNT = math.ceil(currentVolume / thingid.unitVolume)\n local MAX = math.ceil(maxVolume / thingid.unitVolume)\n local cargoMass = cargoMass / 1000 \n system.print(\"\"..nameGroup..\" TOTAL:\"..maxVolume..\" | USED:\"..currentVolume..\" | PERC:\"..percentSmall..\"% | INV:\"..COUNT..\" (\"..cargoMass..\"t)\") \n \n if RRGB == true\n then \n if percent > 80\n then\n color = \"177/255,42/255,42/255\"\n elseif percent > 70\n then\n color = \"255/255,128/255,0/255\" \n elseif percent > 60\n then\n color = \"249/255,212/255,123/255\"\n else\n color = \"34/255,177/255,76/255\"\n end\n else\n if percent > 80\n then\n color = \"34/255,177/255,76/255\"\n elseif percent > 70\n then\n color = \"249/255,212/255,123/255\" \n elseif percent > 60\n then\n color = \"255/255,128/255,0/255\"\n else\n color = \"177/255,42/255,42/255\"\n end\n end\n \n local params = {\n pureName = pureName,\n Material = PAIRMAT,\n BGColor = BGColor,\n ContMax = CONTS,\n RGBC = RRGB,\n volume = volume,\n percent = percent,\n currentVolume = currentVolume,\n maxVolume = maxVolume,\n itemIcn = thingid.iconPath,\n itemName = thingid.displayNameWithSize,\n itemType = thingid.name,\n itemTier = thingid.tier,\n color = color,\n value = VAL,\n COUNT = COUNT,\n MAX = MAX\n }\n config.screen.setRenderScript(interp(template,params))\nend\n\nfunction renderMultiItem(PAIRITEM,PAIRMAT,VAL,BGColor,RRGB,CONTS,QUANTITY)\n if AutoContainer == true then\n maxVolume = CONTVolume \n else\n maxVolume = CONTS\n end\n \n local thingid = system.getItem(PAIRITEM)\n local currentVolume = math.floor(QUANTITY)\n local volume = math.floor(currentVolume / 1000)\n local percent = QUANTITY / maxVolume * 100\n local percentSmall = math.floor(percent)\n local COUNT = math.floor(QUANTITY)\n local MAX = math.ceil(maxVolume / thingid.unitVolume)\n local cargoMass = cargoMass / 1000 \n --system.print(\"\"..nameGroup..\" TOTAL:\"..maxVolume..\" | USED:\"..currentVolume..\" | PERC:\"..percentSmall..\"% | INV:\"..COUNT..\" (\"..cargoMass..\"t)\") \n \n if RRGB == true\n then \n if percent > 80\n then\n color = \"177/255,42/255,42/255\"\n elseif percent > 70\n then\n color = \"255/255,128/255,0/255\" \n elseif percent > 60\n then\n color = \"249/255,212/255,123/255\"\n else\n color = \"34/255,177/255,76/255\"\n end\n else\n if percent > 80\n then\n color = \"34/255,177/255,76/255\"\n elseif percent > 70\n then\n color = \"249/255,212/255,123/255\" \n elseif percent > 60\n then\n color = \"255/255,128/255,0/255\"\n else\n color = \"177/255,42/255,42/255\"\n end\n end\n \n local params = {\n pureName = pureName,\n Material = PAIRMAT,\n BGColor = BGColor,\n ContMax = CONTS,\n RGBC = RRGB,\n volume = volume,\n percent = percent,\n currentVolume = currentVolume,\n maxVolume = maxVolume,\n itemIcn = thingid.iconPath,\n itemName = thingid.displayNameWithSize,\n itemType = thingid.name,\n itemTier = thingid.tier,\n color = color,\n value = VAL,\n COUNT = COUNT,\n MAX = MAX\n }\n\n config.screen.setRenderScript(interp(template,params))\nend\n\nfunction updateMultiScreen(isContentUpdated)\n \n if not isContentUpdated then\n return false\n end\n \n local content = slot1.getContent()\n \n for _,item in pairs(content) do\n if item.id == itemID then\n itemQuantity = item.quantity\n end\n \n if item.id == itemID2 then\n itemQuantity2 = item.quantity\n end\n \n if item.id == itemID3 then\n itemQuantity3 = item.quantity\n end\n \n if item.id == itemID4 then\n itemQuantity4 = item.quantity\n end\n \n if item.id == itemID5 then\n itemQuantity5 = item.quantity\n end \n end\n \n if configureMulti(slot1,slot2,\"Slot1\",\"Slot2\") then\n renderMultiItem(itemID,Material,Value,BG_Color,ReverseRGB,ContSize,itemQuantity)\n end\n \n if configureMulti(slot1,slot3,\"Slot1\",\"Slot3\") then\n renderMultiItem(itemID2,Material2,Value2,BG_Color2,ReverseRGB2,ContSize2,itemQuantity2)\n end\n \n if configureMulti(slot1,slot4,\"Slot1\",\"Slot4\") then\n renderMultiItem(itemID3,Material3,Value3,BG_Color3,ReverseRGB3,ContSize3,itemQuantity3)\n end\n \n if configureMulti(slot1,slot5,\"Slot1\",\"Slot5\") then\n renderMultiItem(itemID4,Material4,Value4,BG_Color4,ReverseRGB4,ContSize4,itemQuantity4)\n end\n \n if configureMulti(slot1,slot6,\"Slot1\",\"Slot6\") then\n renderMultiItem(itemID5,Material5,Value5,BG_Color5,ReverseRGB5,ContSize5,itemQuantity5)\n end\nend\n\n-- Variables\n\nconfig = {}\nscreens = {}\nitemQuantity = 0\nitemQuantity2 = 0\nitemQuantity3 = 0\nitemQuantity4 = 0\nitemQuantity5 = 0\n \n-- Code\n \nif HideUnit then\n unit.hideWidget()\nend\n \nfor slot_name, slot in pairs(unit) do\n if type(slot) == \"table\" and type(slot.export) == \"table\" and slot.getClass then\n if slot.getClass():lower() == 'screenunit' or slot.getClass():lower() == 'screensignunit' then\n slot.slotname = slot_name\n table.insert(screens,slot)\n end\n end\nend\n\nif #screens == 0 then\n system.print(\"No Screen Detected\")\n unit.exit()\nelse\n table.sort(\n screens,\n function(a,b)\n return a.slotname < b.slotname\n end\n )\n local plural = \"\"\n if #screens > 1 then plural = \"s\" end\n system.print(#screens .. \" Screen\" .. plural .. \" Connected\")\nend\n\nif not UseXScreens1Container then\n if configure(slot1,slot2,\"Slot1\",\"Slot2\") then\n render(itemID,Material,Value,BG_Color,ReverseRGB,ContSize)\n end\n \n if configure(slot3,slot4,\"Slot3\",\"Slot4\") then\n render(itemID2,Material2,Value2,BG_Color2,ReverseRGB2,ContSize2)\n end\n \n if configure(slot5,slot6,\"Slot5\",\"Slot6\") then\n render(itemID3,Material3,Value3,BG_Color3,ReverseRGB3,ContSize3)\n end\n \n if configure(slot7,slot8,\"Slot7\",\"Slot8\") then\n render(itemID4,Material4,Value4,BG_Color4,ReverseRGB4,ContSize4)\n end\n \n if configure(slot9,slot10,\"Slot9\",\"Slot10\") then\n render(itemID5,Material5,Value5,BG_Color5,ReverseRGB5,ContSize5)\n end\nelse\n updateMultiScreen(false)\nend\n\n","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"2"},{"code":"slot1.updateContent()","filter":{"args":[],"signature":"onStart()","slotKey":"0"},"key":"0"},{"code":"updateMultiScreen(true)","filter":{"args":[],"signature":"onContentUpdate()","slotKey":"0"},"key":"1"}],"methods":[],"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}}}
